/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler),
    sliderValueConfirmedCallback(this, &Screen2ViewBase::sliderValueConfirmedCallbackHandler),
    sliderValueChangedCallback(this, &Screen2ViewBase::sliderValueChangedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background2.setPosition(0, 0, 480, 272);
    background2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(background2);

    switchButton2.setXY(15, 220);
    switchButton2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    switchButton2.setAlpha(205);
    switchButton2.setAction(buttonCallback);
    add(switchButton2);

    switchButton4.setXY(125, 220);
    switchButton4.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    switchButton4.setAlpha(205);
    switchButton4.setAction(buttonCallback);
    add(switchButton4);

    buttonText2.setXY(44, 225);
    buttonText2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonText2.setLinespacing(0);
    buttonText2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JNQA));
    add(buttonText2);

    buttonText4.setXY(151, 225);
    buttonText4.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonText4.setLinespacing(0);
    buttonText4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KQKK));
    add(buttonText4);

    funcButton.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_INACTIVE_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    funcButton.setBitmapXY(0, 0);
    funcButton.setAction(flexButtonCallback);
    funcButton.setPosition(89, 18, 102, 38);
    add(funcButton);

    funcLabelText.setXY(25, 25);
    funcLabelText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    funcLabelText.setLinespacing(0);
    funcLabelText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OWWW));
    add(funcLabelText);

    freqLabelText.setXY(25, 69);
    freqLabelText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    freqLabelText.setLinespacing(0);
    freqLabelText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WLNB));
    add(freqLabelText);

    ampLabelText.setXY(25, 142);
    ampLabelText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ampLabelText.setLinespacing(0);
    ampLabelText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GOYE));
    add(ampLabelText);

    funcText.setXY(116, 22);
    funcText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    funcText.setLinespacing(0);
    funcText.setWildcard(touchgfx::TypedText(T_FUNCNAMEDATA).getText());
    funcText.resizeToCurrentText();
    funcText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L9AS));
    add(funcText);

    freqSlider.setXY(87, 99);
    freqSlider.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_FILLER_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUND_DARK_ID));
    freqSlider.setupHorizontalSlider(16, 11, 0, 0, 300);
    freqSlider.setValueRange(0, 2000);
    freqSlider.setValue(0);
    freqSlider.setStopValueCallback(sliderValueConfirmedCallback);
    freqSlider.setNewValueCallback(sliderValueChangedCallback);
    add(freqSlider);

    ampSlider.setXY(87, 172);
    ampSlider.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_FILLER_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUND_DARK_ID));
    ampSlider.setupHorizontalSlider(16, 11, 0, 0, 300);
    ampSlider.setValueRange(0, 2000);
    ampSlider.setValue(0);
    ampSlider.setStopValueCallback(sliderValueConfirmedCallback);
    ampSlider.setNewValueCallback(sliderValueChangedCallback);
    add(ampSlider);

    freqValueText.setPosition(87, 69, 104, 24);
    freqValueText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    freqValueText.setLinespacing(0);
    Unicode::snprintf(freqValueTextBuffer, FREQVALUETEXT_SIZE, "%s", touchgfx::TypedText(T_FREQVALUEDATA).getText());
    freqValueText.setWildcard(freqValueTextBuffer);
    freqValueText.setTypedText(touchgfx::TypedText(T_FREQVALUE));
    add(freqValueText);

    ampValueText.setPosition(87, 142, 104, 24);
    ampValueText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    ampValueText.setLinespacing(0);
    Unicode::snprintf(ampValueTextBuffer, AMPVALUETEXT_SIZE, "%s", touchgfx::TypedText(T_AMPVALUEDATA).getText());
    ampValueText.setWildcard(ampValueTextBuffer);
    ampValueText.setTypedText(touchgfx::TypedText(T_AMPVALUE));
    add(ampValueText);
}

Screen2ViewBase::~Screen2ViewBase()
{

}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &switchButton2)
    {
        //switchScreen2
        //When switchButton2 clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
    if (&src == &switchButton4)
    {
        //switchScreen4
        //When switchButton4 clicked change screen to Screen3
        //Go to Screen3 with no screen transition
        application().gotoScreen3ScreenNoTransition();
    }
}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &funcButton)
    {
        //switchFunc
        //When funcButton clicked call virtual function
        //Call onFuncButtonClicked
        onFuncButtonClicked();
    }
}

void Screen2ViewBase::sliderValueConfirmedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &freqSlider)
    {
        //changeFreq
        //When freqSlider value confirmed call virtual function
        //Call onFreqConfirmed
        onFreqConfirmed(value);
    }
    if (&src == &ampSlider)
    {
        //changeAmp
        //When ampSlider value confirmed call virtual function
        //Call onAmpConfirmed
        onAmpConfirmed(value);
    }
}

void Screen2ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &freqSlider)
    {
        //updateFreqValue
        //When freqSlider value changed call virtual function
        //Call freqValueUpdate
        freqValueUpdate(value);
    }
    if (&src == &ampSlider)
    {
        //updateAmpValue
        //When ampSlider value changed call virtual function
        //Call ampValueUpdate
        ampValueUpdate(value);
    }
}
