/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler),
    slideMenuStateChangedCallback(this, &Screen1ViewBase::slideMenuStateChangedCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background1.setPosition(0, 0, 480, 272);
    background1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(background1);

    displayGraph.setPosition(15, 20, 435, 230);
    displayGraph.setScale(1);
    displayGraph.setGraphAreaMargin(0, 0, 0, 0);
    displayGraph.setGraphAreaPadding(0, 0, 0, 0);
    displayGraph.setGraphRangeY(0, 260);
    displayGraphMajorXAxisGrid.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    displayGraphMajorXAxisGrid.setInterval(40);
    displayGraphMajorXAxisGrid.setLineWidth(1);
    displayGraphMajorXAxisGrid.setAlpha(70);
    displayGraphMajorXAxisGrid.setScale(1);
    displayGraph.addGraphElement(displayGraphMajorXAxisGrid);

    displayGraphMajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    displayGraphMajorYAxisGrid.setInterval(32);
    displayGraphMajorYAxisGrid.setLineWidth(1);
    displayGraphMajorYAxisGrid.setAlpha(70);
    displayGraphMajorYAxisGrid.setScale(1);
    displayGraph.addGraphElement(displayGraphMajorYAxisGrid);

    displayGraphBoxes1.setColor(touchgfx::Color::getColorFromRGB(196, 188, 22));
    displayGraphBoxes1.setBoxWidth(2);
    displayGraph.addGraphElement(displayGraphBoxes1);


    add(displayGraph);

    dispXText.setPosition(15, 250, 60, 15);
    dispXText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dispXText.setLinespacing(0);
    Unicode::snprintf(dispXTextBuffer, DISPXTEXT_SIZE, "%s", touchgfx::TypedText(T_XSCALEDATA).getText());
    dispXText.setWildcard(dispXTextBuffer);
    dispXText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FBCX));
    add(dispXText);

    dispYText.setPosition(60, 250, 60, 15);
    dispYText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dispYText.setLinespacing(0);
    Unicode::snprintf(dispYTextBuffer, DISPYTEXT_SIZE, "%s", touchgfx::TypedText(T_YSCALEDATA).getText());
    dispYText.setWildcard(dispYTextBuffer);
    dispYText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PXVJ));
    add(dispYText);

    VppText.setPosition(120, 250, 80, 15);
    VppText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    VppText.setLinespacing(0);
    Unicode::snprintf(VppTextBuffer, VPPTEXT_SIZE, "%s", touchgfx::TypedText(T_VPPDATA).getText());
    VppText.setWildcard(VppTextBuffer);
    VppText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BPU6));
    add(VppText);

    freqText.setPosition(200, 250, 80, 15);
    freqText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    freqText.setLinespacing(0);
    Unicode::snprintf(freqTextBuffer, FREQTEXT_SIZE, "%s", touchgfx::TypedText(T_FREQDATA).getText());
    freqText.setWildcard(freqTextBuffer);
    freqText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XR9R));
    add(freqText);

    periodText.setPosition(280, 250, 80, 15);
    periodText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    periodText.setLinespacing(0);
    Unicode::snprintf(periodTextBuffer, PERIODTEXT_SIZE, "%s", touchgfx::TypedText(T_PERIODDATA).getText());
    periodText.setWildcard(periodTextBuffer);
    periodText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ZXP));
    add(periodText);

    horizontalLine0.setPosition(15, 161, 435, 15);
    horizontalLine0Painter.setColor(touchgfx::Color::getColorFromRGB(0, 187, 187));
    horizontalLine0.setPainter(horizontalLine0Painter);
    horizontalLine0.setStart(0, 3);
    horizontalLine0.setEnd(435, 3);
    horizontalLine0.setLineWidth(2);
    horizontalLine0.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    horizontalLine0.setVisible(false);
    add(horizontalLine0);

    horizontalLine1.setPosition(15, 220, 435, 15);
    horizontalLine1Painter.setColor(touchgfx::Color::getColorFromRGB(187, 187, 0));
    horizontalLine1.setPainter(horizontalLine1Painter);
    horizontalLine1.setStart(0, 3);
    horizontalLine1.setEnd(435, 3);
    horizontalLine1.setLineWidth(2);
    horizontalLine1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    horizontalLine1.setVisible(false);
    add(horizontalLine1);

    horizontalLine2.setPosition(15, 220, 435, 15);
    horizontalLine2Painter.setColor(touchgfx::Color::getColorFromRGB(0, 187, 187));
    horizontalLine2.setPainter(horizontalLine2Painter);
    horizontalLine2.setStart(0, 3);
    horizontalLine2.setEnd(435, 3);
    horizontalLine2.setLineWidth(2);
    horizontalLine2.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    horizontalLine2.setVisible(false);
    add(horizontalLine2);

    verticalLine0.setPosition(90, 20, 15, 230);
    verticalLine0Painter.setColor(touchgfx::Color::getColorFromRGB(0, 187, 187));
    verticalLine0.setPainter(verticalLine0Painter);
    verticalLine0.setStart(3, 0);
    verticalLine0.setEnd(3, 250);
    verticalLine0.setLineWidth(2);
    verticalLine0.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    verticalLine0.setVisible(false);
    add(verticalLine0);

    verticalLine1.setPosition(120, 20, 15, 230);
    verticalLine1Painter.setColor(touchgfx::Color::getColorFromRGB(187, 187, 0));
    verticalLine1.setPainter(verticalLine1Painter);
    verticalLine1.setStart(3, 0);
    verticalLine1.setEnd(3, 250);
    verticalLine1.setLineWidth(2);
    verticalLine1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    verticalLine1.setVisible(false);
    add(verticalLine1);

    verticalLine2.setPosition(120, 20, 15, 230);
    verticalLine2Painter.setColor(touchgfx::Color::getColorFromRGB(0, 187, 187));
    verticalLine2.setPainter(verticalLine2Painter);
    verticalLine2.setStart(3, 0);
    verticalLine2.setEnd(3, 250);
    verticalLine2.setLineWidth(2);
    verticalLine2.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    verticalLine2.setVisible(false);
    add(verticalLine2);

    slideMenu1.setXY(312, 0);
    slideMenu1.setup(touchgfx::SlideMenu::WEST,
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BACKGROUND_ID),
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BUTTON_ID),
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BUTTON_ID),
        20, 0, 0, 115);
    slideMenu1.setState(touchgfx::SlideMenu::COLLAPSED);
    slideMenu1.setVisiblePixelsWhenCollapsed(45);
    slideMenu1.setHiddenPixelsWhenExpanded(15);
    slideMenu1.setAnimationEasingEquation(touchgfx::EasingEquations::cubicEaseInOut);
    slideMenu1.setAnimationDuration(18);
    slideMenu1.setExpandedStateTimeout(0);
    slideMenu1.setStateChangedCallback(slideMenuStateChangedCallback);
    mainMenu.setPosition(39, 10, 250, 250);
    switchButton1.setXY(0, 0);
    switchButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    switchButton1.setAction(buttonCallback);
    mainMenu.add(switchButton1);

    switchText.setXY(28, 4);
    switchText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    switchText.setLinespacing(0);
    switchText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PYQS));
    mainMenu.add(switchText);

    displayMenuButton.setXY(0, 48);
    displayMenuButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    displayMenuButton.setAction(buttonCallback);
    mainMenu.add(displayMenuButton);

    cursorMenuButton.setXY(0, 192);
    cursorMenuButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    cursorMenuButton.setAction(buttonCallback);
    mainMenu.add(cursorMenuButton);

    displayText.setXY(12, 52);
    displayText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    displayText.setLinespacing(0);
    displayText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5SG4));
    mainMenu.add(displayText);

    cursorText.setXY(17, 196);
    cursorText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cursorText.setLinespacing(0);
    cursorText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1WEO));
    mainMenu.add(cursorText);

    measureMenuButton.setXY(0, 96);
    measureMenuButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    measureMenuButton.setAction(buttonCallback);
    mainMenu.add(measureMenuButton);

    measureText.setXY(12, 101);
    measureText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    measureText.setLinespacing(0);
    measureText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V9SP));
    mainMenu.add(measureText);

    triggerMenuButton.setXY(0, 144);
    triggerMenuButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    triggerMenuButton.setAction(buttonCallback);
    mainMenu.add(triggerMenuButton);

    triggerText.setXY(12, 148);
    triggerText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    triggerText.setLinespacing(0);
    triggerText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QFZD));
    mainMenu.add(triggerText);

    slideMenu1.add(mainMenu);

    measureMenu.setPosition(39, 10, 250, 250);
    measureMenu.setVisible(false);
    VppToggle.setXY(0, 0);
    VppToggle.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    VppToggle.setAction(buttonCallback);
    measureMenu.add(VppToggle);

    vppToggleText.setXY(34, 4);
    vppToggleText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    vppToggleText.setLinespacing(0);
    vppToggleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LFL6));
    measureMenu.add(vppToggleText);

    freqToggle.setXY(0, 48);
    freqToggle.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    freqToggle.setAction(buttonCallback);
    measureMenu.add(freqToggle);

    freqToggleText.setXY(28, 52);
    freqToggleText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    freqToggleText.setLinespacing(0);
    freqToggleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UB6V));
    measureMenu.add(freqToggleText);

    periodToggle.setXY(0, 96);
    periodToggle.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    periodToggle.setAction(buttonCallback);
    measureMenu.add(periodToggle);

    periodToggleText.setXY(17, 101);
    periodToggleText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    periodToggleText.setLinespacing(0);
    periodToggleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JAPC));
    measureMenu.add(periodToggleText);

    slideMenu1.add(measureMenu);

    displayMenu.setPosition(39, 10, 250, 250);
    displayMenu.setVisible(false);
    XScaleToggle.setXY(0, 0);
    XScaleToggle.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    XScaleToggle.setAction(buttonCallback);
    displayMenu.add(XScaleToggle);

    XScaleText.setXY(12, 4);
    XScaleText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    XScaleText.setLinespacing(0);
    XScaleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XJQC));
    displayMenu.add(XScaleText);

    YScaleToggle.setXY(0, 48);
    YScaleToggle.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    YScaleToggle.setAction(buttonCallback);
    displayMenu.add(YScaleToggle);

    YScaleText.setXY(12, 52);
    YScaleText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    YScaleText.setLinespacing(0);
    YScaleText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YG2A));
    displayMenu.add(YScaleText);

    offsetToggle.setXY(0, 96);
    offsetToggle.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    offsetToggle.setAction(buttonCallback);
    displayMenu.add(offsetToggle);

    offsetText.setXY(17, 101);
    offsetText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    offsetText.setLinespacing(0);
    offsetText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ZHX));
    displayMenu.add(offsetText);

    slideMenu1.add(displayMenu);

    triggerMenu.setPosition(39, 10, 250, 250);
    triggerMenu.setVisible(false);
    levelToggle.setXY(0, 48);
    levelToggle.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    levelToggle.setAction(buttonCallback);
    triggerMenu.add(levelToggle);

    levelText.setXY(23, 52);
    levelText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    levelText.setLinespacing(0);
    levelText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZPIM));
    triggerMenu.add(levelText);

    triggerTypeButton.setXY(0, 0);
    triggerTypeButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    triggerTypeButton.setAction(buttonCallback);
    triggerMenu.add(triggerTypeButton);

    triggerTypeText.setXY(17, 4);
    triggerTypeText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    triggerTypeText.setLinespacing(0);
    Unicode::snprintf(triggerTypeTextBuffer, TRIGGERTYPETEXT_SIZE, "%s", touchgfx::TypedText(T_TRIGGERTYPEDATA).getText());
    triggerTypeText.setWildcard(triggerTypeTextBuffer);
    triggerTypeText.resizeToCurrentText();
    triggerTypeText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OJO1));
    triggerMenu.add(triggerTypeText);

    slideMenu1.add(triggerMenu);

    cursorMenu.setPosition(39, 10, 250, 250);
    cursorMenu.setVisible(false);
    cursor1YToggle.setXY(0, 48);
    cursor1YToggle.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    cursor1YToggle.setAction(buttonCallback);
    cursorMenu.add(cursor1YToggle);

    cursor1XToggle.setXY(-1, 0);
    cursor1XToggle.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    cursor1XToggle.setAction(buttonCallback);
    cursorMenu.add(cursor1XToggle);

    cursor2XToggle.setXY(-1, 96);
    cursor2XToggle.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    cursor2XToggle.setAction(buttonCallback);
    cursorMenu.add(cursor2XToggle);

    cursor2YToggle.setXY(-1, 142);
    cursor2YToggle.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID));
    cursor2YToggle.setAction(buttonCallback);
    cursorMenu.add(cursor2YToggle);

    cursor1YText.setXY(34, 52);
    cursor1YText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cursor1YText.setLinespacing(0);
    cursor1YText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E19V));
    cursorMenu.add(cursor1YText);

    cursor1XText.setXY(34, 4);
    cursor1XText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cursor1XText.setLinespacing(0);
    cursor1XText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XFCZ));
    cursorMenu.add(cursor1XText);

    cursor2XText.setXY(34, 100);
    cursor2XText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cursor2XText.setLinespacing(0);
    cursor2XText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B2ZS));
    cursorMenu.add(cursor2XText);

    cursor2YText.setXY(34, 148);
    cursor2YText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cursor2YText.setLinespacing(0);
    cursor2YText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O3GV));
    cursorMenu.add(cursor2YText);

    slideMenu1.add(cursorMenu);

    add(slideMenu1);

    backButton.setXY(366, 214);
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_36_36_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_BACKSPACE_36_36_E8F6FB_SVG_ID));
    backButton.setIconXY(30, 0);
    backButton.setVisible(false);
    backButton.setAction(buttonCallback);
    add(backButton);

    cursor1DataText.setXY(15, 4);
    cursor1DataText.setColor(touchgfx::Color::getColorFromRGB(187, 187, 0));
    cursor1DataText.setLinespacing(0);
    touchgfx::Unicode::snprintf(cursor1DataTextBuffer1, CURSOR1DATATEXTBUFFER1_SIZE, "%s", touchgfx::TypedText(T_CURSOR2DATA1).getText());
    cursor1DataText.setWildcard1(cursor1DataTextBuffer1);
    touchgfx::Unicode::snprintf(cursor1DataTextBuffer2, CURSOR1DATATEXTBUFFER2_SIZE, "%s", touchgfx::TypedText(T_CURSOR2DATA2).getText());
    cursor1DataText.setWildcard2(cursor1DataTextBuffer2);
    cursor1DataText.resizeToCurrentText();
    cursor1DataText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LZWQ));
    add(cursor1DataText);

    cursor2DataText.setXY(169, 4);
    cursor2DataText.setColor(touchgfx::Color::getColorFromRGB(187, 187, 0));
    cursor2DataText.setLinespacing(0);
    touchgfx::Unicode::snprintf(cursor2DataTextBuffer1, CURSOR2DATATEXTBUFFER1_SIZE, "%s", touchgfx::TypedText(T_CURSOR2DATA1).getText());
    cursor2DataText.setWildcard1(cursor2DataTextBuffer1);
    touchgfx::Unicode::snprintf(cursor2DataTextBuffer2, CURSOR2DATATEXTBUFFER2_SIZE, "%s", touchgfx::TypedText(T_CURSOR2DATA2).getText());
    cursor2DataText.setWildcard2(cursor2DataTextBuffer2);
    cursor2DataText.resizeToCurrentText();
    cursor2DataText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y2DS));
    add(cursor2DataText);
}

Screen1ViewBase::~Screen1ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &switchButton1)
    {
        //switchScreen1
        //When switchButton1 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();
    }
    if (&src == &VppToggle)
    {
        //onVppToggled
        //When VppToggle clicked call virtual function
        //Call onVppToggled
        onVppToggled();
    }
    if (&src == &freqToggle)
    {
        //onFreqToggled
        //When freqToggle clicked call virtual function
        //Call onFreqToggled
        onFreqToggled();
    }
    if (&src == &periodToggle)
    {
        //onPeriodToggled
        //When periodToggle clicked call virtual function
        //Call onPeriodToggled
        onPeriodToggled();
    }
    if (&src == &backButton)
    {
        //closeEverything
        //When backButton clicked call virtual function
        //Call onBackButtonClicked
        onBackButtonClicked();
    }
    if (&src == &displayMenuButton)
    {
        //showDisplay
        //When displayMenuButton clicked call virtual function
        //Call onDisplayMenuClicked
        onDisplayMenuClicked();
    }
    if (&src == &measureMenuButton)
    {
        //showMeasure
        //When measureMenuButton clicked call virtual function
        //Call onMeasureMenuClicked
        onMeasureMenuClicked();
    }
    if (&src == &XScaleToggle)
    {
        //onXScaleToggled
        //When XScaleToggle clicked call virtual function
        //Call onXScaleToggled
        onXScaleToggled();
    }
    if (&src == &YScaleToggle)
    {
        //onYScaleToggled
        //When YScaleToggle clicked call virtual function
        //Call onYScaleToggled
        onYScaleToggled();
    }
    if (&src == &offsetToggle)
    {
        //onOffsetToggled
        //When offsetToggle clicked call virtual function
        //Call onOffsetToggled
        onOffsetToggled();
    }
    if (&src == &triggerMenuButton)
    {
        //showTrigger
        //When triggerMenuButton clicked call virtual function
        //Call onTriggerMenuClicked
        onTriggerMenuClicked();
    }
    if (&src == &levelToggle)
    {
        //onLevelToggled
        //When levelToggle clicked call virtual function
        //Call onLevelToggled
        onLevelToggled();
    }
    if (&src == &triggerTypeButton)
    {
        //triggerTypeClicked
        //When triggerTypeButton clicked call virtual function
        //Call onTriggerTypeClicked
        onTriggerTypeClicked();
    }
    if (&src == &cursorMenuButton)
    {
        //showCursor
        //When cursorMenuButton clicked call virtual function
        //Call onCursorMenuClicked
        onCursorMenuClicked();
    }
    if (&src == &cursor1XToggle)
    {
        //onCursor1XToggle
        //When cursor1XToggle clicked call virtual function
        //Call onCursor1XToggled
        onCursor1XToggled();
    }
    if (&src == &cursor1YToggle)
    {
        //onCursor1YToggled
        //When cursor1YToggle clicked call virtual function
        //Call onCursor1YToggled
        onCursor1YToggled();
    }
    if (&src == &cursor2XToggle)
    {
        //onCursor2XToggled
        //When cursor2XToggle clicked call virtual function
        //Call onCursor2XToggled
        onCursor2XToggled();
    }
    if (&src == &cursor2YToggle)
    {
        //onCursor2YToggled
        //When cursor2YToggle clicked call virtual function
        //Call onCursor2YToggled
        onCursor2YToggled();
    }
}

void Screen1ViewBase::slideMenuStateChangedCallbackHandler(const touchgfx::SlideMenu& src)
{
    if (&src == &slideMenu1)
    {
        //slideMenuStateChange
        //When slideMenu1 state changed call virtual function
        //Call onSlideMenuUpdated
        onSlideMenuUpdated();
    }
}
